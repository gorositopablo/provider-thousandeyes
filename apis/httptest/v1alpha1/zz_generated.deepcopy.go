//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APILinksInitParameters) DeepCopyInto(out *APILinksInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APILinksInitParameters.
func (in *APILinksInitParameters) DeepCopy() *APILinksInitParameters {
	if in == nil {
		return nil
	}
	out := new(APILinksInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APILinksObservation) DeepCopyInto(out *APILinksObservation) {
	*out = *in
	if in.Href != nil {
		in, out := &in.Href, &out.Href
		*out = new(string)
		**out = **in
	}
	if in.Rel != nil {
		in, out := &in.Rel, &out.Rel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APILinksObservation.
func (in *APILinksObservation) DeepCopy() *APILinksObservation {
	if in == nil {
		return nil
	}
	out := new(APILinksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APILinksParameters) DeepCopyInto(out *APILinksParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APILinksParameters.
func (in *APILinksParameters) DeepCopy() *APILinksParameters {
	if in == nil {
		return nil
	}
	out := new(APILinksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AgentsInitParameters) DeepCopyInto(out *AgentsInitParameters) {
	*out = *in
	if in.AgentID != nil {
		in, out := &in.AgentID, &out.AgentID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AgentsInitParameters.
func (in *AgentsInitParameters) DeepCopy() *AgentsInitParameters {
	if in == nil {
		return nil
	}
	out := new(AgentsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AgentsObservation) DeepCopyInto(out *AgentsObservation) {
	*out = *in
	if in.AgentID != nil {
		in, out := &in.AgentID, &out.AgentID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AgentsObservation.
func (in *AgentsObservation) DeepCopy() *AgentsObservation {
	if in == nil {
		return nil
	}
	out := new(AgentsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AgentsParameters) DeepCopyInto(out *AgentsParameters) {
	*out = *in
	if in.AgentID != nil {
		in, out := &in.AgentID, &out.AgentID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AgentsParameters.
func (in *AgentsParameters) DeepCopy() *AgentsParameters {
	if in == nil {
		return nil
	}
	out := new(AgentsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertRulesInitParameters) DeepCopyInto(out *AlertRulesInitParameters) {
	*out = *in
	if in.RuleID != nil {
		in, out := &in.RuleID, &out.RuleID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertRulesInitParameters.
func (in *AlertRulesInitParameters) DeepCopy() *AlertRulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(AlertRulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertRulesObservation) DeepCopyInto(out *AlertRulesObservation) {
	*out = *in
	if in.RuleID != nil {
		in, out := &in.RuleID, &out.RuleID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertRulesObservation.
func (in *AlertRulesObservation) DeepCopy() *AlertRulesObservation {
	if in == nil {
		return nil
	}
	out := new(AlertRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertRulesParameters) DeepCopyInto(out *AlertRulesParameters) {
	*out = *in
	if in.RuleID != nil {
		in, out := &in.RuleID, &out.RuleID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertRulesParameters.
func (in *AlertRulesParameters) DeepCopy() *AlertRulesParameters {
	if in == nil {
		return nil
	}
	out := new(AlertRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BGPMonitorsInitParameters) DeepCopyInto(out *BGPMonitorsInitParameters) {
	*out = *in
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.MonitorID != nil {
		in, out := &in.MonitorID, &out.MonitorID
		*out = new(float64)
		**out = **in
	}
	if in.MonitorName != nil {
		in, out := &in.MonitorName, &out.MonitorName
		*out = new(string)
		**out = **in
	}
	if in.MonitorType != nil {
		in, out := &in.MonitorType, &out.MonitorType
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BGPMonitorsInitParameters.
func (in *BGPMonitorsInitParameters) DeepCopy() *BGPMonitorsInitParameters {
	if in == nil {
		return nil
	}
	out := new(BGPMonitorsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BGPMonitorsObservation) DeepCopyInto(out *BGPMonitorsObservation) {
	*out = *in
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.MonitorID != nil {
		in, out := &in.MonitorID, &out.MonitorID
		*out = new(float64)
		**out = **in
	}
	if in.MonitorName != nil {
		in, out := &in.MonitorName, &out.MonitorName
		*out = new(string)
		**out = **in
	}
	if in.MonitorType != nil {
		in, out := &in.MonitorType, &out.MonitorType
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BGPMonitorsObservation.
func (in *BGPMonitorsObservation) DeepCopy() *BGPMonitorsObservation {
	if in == nil {
		return nil
	}
	out := new(BGPMonitorsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BGPMonitorsParameters) DeepCopyInto(out *BGPMonitorsParameters) {
	*out = *in
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.MonitorID != nil {
		in, out := &in.MonitorID, &out.MonitorID
		*out = new(float64)
		**out = **in
	}
	if in.MonitorName != nil {
		in, out := &in.MonitorName, &out.MonitorName
		*out = new(string)
		**out = **in
	}
	if in.MonitorType != nil {
		in, out := &in.MonitorType, &out.MonitorType
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BGPMonitorsParameters.
func (in *BGPMonitorsParameters) DeepCopy() *BGPMonitorsParameters {
	if in == nil {
		return nil
	}
	out := new(BGPMonitorsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupsAgentsInitParameters) DeepCopyInto(out *GroupsAgentsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupsAgentsInitParameters.
func (in *GroupsAgentsInitParameters) DeepCopy() *GroupsAgentsInitParameters {
	if in == nil {
		return nil
	}
	out := new(GroupsAgentsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupsAgentsObservation) DeepCopyInto(out *GroupsAgentsObservation) {
	*out = *in
	if in.AgentID != nil {
		in, out := &in.AgentID, &out.AgentID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupsAgentsObservation.
func (in *GroupsAgentsObservation) DeepCopy() *GroupsAgentsObservation {
	if in == nil {
		return nil
	}
	out := new(GroupsAgentsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupsAgentsParameters) DeepCopyInto(out *GroupsAgentsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupsAgentsParameters.
func (in *GroupsAgentsParameters) DeepCopy() *GroupsAgentsParameters {
	if in == nil {
		return nil
	}
	out := new(GroupsAgentsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupsInitParameters) DeepCopyInto(out *GroupsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupsInitParameters.
func (in *GroupsInitParameters) DeepCopy() *GroupsInitParameters {
	if in == nil {
		return nil
	}
	out := new(GroupsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupsObservation) DeepCopyInto(out *GroupsObservation) {
	*out = *in
	if in.Agents != nil {
		in, out := &in.Agents, &out.Agents
		*out = make([]GroupsAgentsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Builtin != nil {
		in, out := &in.Builtin, &out.Builtin
		*out = new(bool)
		**out = **in
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tests != nil {
		in, out := &in.Tests, &out.Tests
		*out = make([]TestsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupsObservation.
func (in *GroupsObservation) DeepCopy() *GroupsObservation {
	if in == nil {
		return nil
	}
	out := new(GroupsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupsParameters) DeepCopyInto(out *GroupsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupsParameters.
func (in *GroupsParameters) DeepCopy() *GroupsParameters {
	if in == nil {
		return nil
	}
	out := new(GroupsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Server) DeepCopyInto(out *Server) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Server.
func (in *Server) DeepCopy() *Server {
	if in == nil {
		return nil
	}
	out := new(Server)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Server) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerInitParameters) DeepCopyInto(out *ServerInitParameters) {
	*out = *in
	if in.Agents != nil {
		in, out := &in.Agents, &out.Agents
		*out = make([]AgentsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AlertRules != nil {
		in, out := &in.AlertRules, &out.AlertRules
		*out = make([]AlertRulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AlertsEnabled != nil {
		in, out := &in.AlertsEnabled, &out.AlertsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AuthType != nil {
		in, out := &in.AuthType, &out.AuthType
		*out = new(string)
		**out = **in
	}
	if in.BGPMeasurements != nil {
		in, out := &in.BGPMeasurements, &out.BGPMeasurements
		*out = new(bool)
		**out = **in
	}
	if in.BGPMonitors != nil {
		in, out := &in.BGPMonitors, &out.BGPMonitors
		*out = make([]BGPMonitorsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BandwidthMeasurements != nil {
		in, out := &in.BandwidthMeasurements, &out.BandwidthMeasurements
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificate != nil {
		in, out := &in.ClientCertificate, &out.ClientCertificate
		*out = new(string)
		**out = **in
	}
	if in.ContentRegex != nil {
		in, out := &in.ContentRegex, &out.ContentRegex
		*out = new(string)
		**out = **in
	}
	if in.CustomHeaders != nil {
		in, out := &in.CustomHeaders, &out.CustomHeaders
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DNSOverride != nil {
		in, out := &in.DNSOverride, &out.DNSOverride
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DesiredStatusCode != nil {
		in, out := &in.DesiredStatusCode, &out.DesiredStatusCode
		*out = new(string)
		**out = **in
	}
	if in.DownloadLimit != nil {
		in, out := &in.DownloadLimit, &out.DownloadLimit
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.FollowRedirects != nil {
		in, out := &in.FollowRedirects, &out.FollowRedirects
		*out = new(bool)
		**out = **in
	}
	if in.HTTPTargetTime != nil {
		in, out := &in.HTTPTargetTime, &out.HTTPTargetTime
		*out = new(float64)
		**out = **in
	}
	if in.HTTPTimeLimit != nil {
		in, out := &in.HTTPTimeLimit, &out.HTTPTimeLimit
		*out = new(float64)
		**out = **in
	}
	if in.HTTPVersion != nil {
		in, out := &in.HTTPVersion, &out.HTTPVersion
		*out = new(float64)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(float64)
		**out = **in
	}
	if in.MtuMeasurements != nil {
		in, out := &in.MtuMeasurements, &out.MtuMeasurements
		*out = new(bool)
		**out = **in
	}
	if in.NetworkMeasurements != nil {
		in, out := &in.NetworkMeasurements, &out.NetworkMeasurements
		*out = new(bool)
		**out = **in
	}
	if in.NumPathTraces != nil {
		in, out := &in.NumPathTraces, &out.NumPathTraces
		*out = new(float64)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.PathTraceMode != nil {
		in, out := &in.PathTraceMode, &out.PathTraceMode
		*out = new(string)
		**out = **in
	}
	if in.PostBody != nil {
		in, out := &in.PostBody, &out.PostBody
		*out = new(string)
		**out = **in
	}
	if in.ProbeMode != nil {
		in, out := &in.ProbeMode, &out.ProbeMode
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.SSLVersionID != nil {
		in, out := &in.SSLVersionID, &out.SSLVersionID
		*out = new(float64)
		**out = **in
	}
	if in.SharedWithAccounts != nil {
		in, out := &in.SharedWithAccounts, &out.SharedWithAccounts
		*out = make([]SharedWithAccountsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TestName != nil {
		in, out := &in.TestName, &out.TestName
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.UseNtlm != nil {
		in, out := &in.UseNtlm, &out.UseNtlm
		*out = new(bool)
		**out = **in
	}
	if in.UserAgent != nil {
		in, out := &in.UserAgent, &out.UserAgent
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VerifyCertificate != nil {
		in, out := &in.VerifyCertificate, &out.VerifyCertificate
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerInitParameters.
func (in *ServerInitParameters) DeepCopy() *ServerInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerList) DeepCopyInto(out *ServerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Server, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerList.
func (in *ServerList) DeepCopy() *ServerList {
	if in == nil {
		return nil
	}
	out := new(ServerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerObservation) DeepCopyInto(out *ServerObservation) {
	*out = *in
	if in.APILinks != nil {
		in, out := &in.APILinks, &out.APILinks
		*out = make([]APILinksObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Agents != nil {
		in, out := &in.Agents, &out.Agents
		*out = make([]AgentsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AlertRules != nil {
		in, out := &in.AlertRules, &out.AlertRules
		*out = make([]AlertRulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AlertsEnabled != nil {
		in, out := &in.AlertsEnabled, &out.AlertsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AuthType != nil {
		in, out := &in.AuthType, &out.AuthType
		*out = new(string)
		**out = **in
	}
	if in.BGPMeasurements != nil {
		in, out := &in.BGPMeasurements, &out.BGPMeasurements
		*out = new(bool)
		**out = **in
	}
	if in.BGPMonitors != nil {
		in, out := &in.BGPMonitors, &out.BGPMonitors
		*out = make([]BGPMonitorsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BandwidthMeasurements != nil {
		in, out := &in.BandwidthMeasurements, &out.BandwidthMeasurements
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificate != nil {
		in, out := &in.ClientCertificate, &out.ClientCertificate
		*out = new(string)
		**out = **in
	}
	if in.ContentRegex != nil {
		in, out := &in.ContentRegex, &out.ContentRegex
		*out = new(string)
		**out = **in
	}
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(string)
		**out = **in
	}
	if in.CreatedDate != nil {
		in, out := &in.CreatedDate, &out.CreatedDate
		*out = new(string)
		**out = **in
	}
	if in.CustomHeaders != nil {
		in, out := &in.CustomHeaders, &out.CustomHeaders
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DNSOverride != nil {
		in, out := &in.DNSOverride, &out.DNSOverride
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DesiredStatusCode != nil {
		in, out := &in.DesiredStatusCode, &out.DesiredStatusCode
		*out = new(string)
		**out = **in
	}
	if in.DownloadLimit != nil {
		in, out := &in.DownloadLimit, &out.DownloadLimit
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.FollowRedirects != nil {
		in, out := &in.FollowRedirects, &out.FollowRedirects
		*out = new(bool)
		**out = **in
	}
	if in.Groups != nil {
		in, out := &in.Groups, &out.Groups
		*out = make([]GroupsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPTargetTime != nil {
		in, out := &in.HTTPTargetTime, &out.HTTPTargetTime
		*out = new(float64)
		**out = **in
	}
	if in.HTTPTimeLimit != nil {
		in, out := &in.HTTPTimeLimit, &out.HTTPTimeLimit
		*out = new(float64)
		**out = **in
	}
	if in.HTTPVersion != nil {
		in, out := &in.HTTPVersion, &out.HTTPVersion
		*out = new(float64)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(float64)
		**out = **in
	}
	if in.LiveShare != nil {
		in, out := &in.LiveShare, &out.LiveShare
		*out = new(bool)
		**out = **in
	}
	if in.ModifiedBy != nil {
		in, out := &in.ModifiedBy, &out.ModifiedBy
		*out = new(string)
		**out = **in
	}
	if in.ModifiedDate != nil {
		in, out := &in.ModifiedDate, &out.ModifiedDate
		*out = new(string)
		**out = **in
	}
	if in.MtuMeasurements != nil {
		in, out := &in.MtuMeasurements, &out.MtuMeasurements
		*out = new(bool)
		**out = **in
	}
	if in.NetworkMeasurements != nil {
		in, out := &in.NetworkMeasurements, &out.NetworkMeasurements
		*out = new(bool)
		**out = **in
	}
	if in.NumPathTraces != nil {
		in, out := &in.NumPathTraces, &out.NumPathTraces
		*out = new(float64)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.PathTraceMode != nil {
		in, out := &in.PathTraceMode, &out.PathTraceMode
		*out = new(string)
		**out = **in
	}
	if in.PostBody != nil {
		in, out := &in.PostBody, &out.PostBody
		*out = new(string)
		**out = **in
	}
	if in.ProbeMode != nil {
		in, out := &in.ProbeMode, &out.ProbeMode
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.SSLVersion != nil {
		in, out := &in.SSLVersion, &out.SSLVersion
		*out = new(string)
		**out = **in
	}
	if in.SSLVersionID != nil {
		in, out := &in.SSLVersionID, &out.SSLVersionID
		*out = new(float64)
		**out = **in
	}
	if in.SavedEvent != nil {
		in, out := &in.SavedEvent, &out.SavedEvent
		*out = new(bool)
		**out = **in
	}
	if in.SharedWithAccounts != nil {
		in, out := &in.SharedWithAccounts, &out.SharedWithAccounts
		*out = make([]SharedWithAccountsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TestID != nil {
		in, out := &in.TestID, &out.TestID
		*out = new(float64)
		**out = **in
	}
	if in.TestName != nil {
		in, out := &in.TestName, &out.TestName
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.UseNtlm != nil {
		in, out := &in.UseNtlm, &out.UseNtlm
		*out = new(bool)
		**out = **in
	}
	if in.UserAgent != nil {
		in, out := &in.UserAgent, &out.UserAgent
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VerifyCertificate != nil {
		in, out := &in.VerifyCertificate, &out.VerifyCertificate
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerObservation.
func (in *ServerObservation) DeepCopy() *ServerObservation {
	if in == nil {
		return nil
	}
	out := new(ServerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerParameters) DeepCopyInto(out *ServerParameters) {
	*out = *in
	if in.Agents != nil {
		in, out := &in.Agents, &out.Agents
		*out = make([]AgentsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AlertRules != nil {
		in, out := &in.AlertRules, &out.AlertRules
		*out = make([]AlertRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AlertsEnabled != nil {
		in, out := &in.AlertsEnabled, &out.AlertsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AuthType != nil {
		in, out := &in.AuthType, &out.AuthType
		*out = new(string)
		**out = **in
	}
	if in.BGPMeasurements != nil {
		in, out := &in.BGPMeasurements, &out.BGPMeasurements
		*out = new(bool)
		**out = **in
	}
	if in.BGPMonitors != nil {
		in, out := &in.BGPMonitors, &out.BGPMonitors
		*out = make([]BGPMonitorsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BandwidthMeasurements != nil {
		in, out := &in.BandwidthMeasurements, &out.BandwidthMeasurements
		*out = new(bool)
		**out = **in
	}
	if in.ClientCertificate != nil {
		in, out := &in.ClientCertificate, &out.ClientCertificate
		*out = new(string)
		**out = **in
	}
	if in.ContentRegex != nil {
		in, out := &in.ContentRegex, &out.ContentRegex
		*out = new(string)
		**out = **in
	}
	if in.CustomHeaders != nil {
		in, out := &in.CustomHeaders, &out.CustomHeaders
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DNSOverride != nil {
		in, out := &in.DNSOverride, &out.DNSOverride
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DesiredStatusCode != nil {
		in, out := &in.DesiredStatusCode, &out.DesiredStatusCode
		*out = new(string)
		**out = **in
	}
	if in.DownloadLimit != nil {
		in, out := &in.DownloadLimit, &out.DownloadLimit
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.FollowRedirects != nil {
		in, out := &in.FollowRedirects, &out.FollowRedirects
		*out = new(bool)
		**out = **in
	}
	if in.HTTPTargetTime != nil {
		in, out := &in.HTTPTargetTime, &out.HTTPTargetTime
		*out = new(float64)
		**out = **in
	}
	if in.HTTPTimeLimit != nil {
		in, out := &in.HTTPTimeLimit, &out.HTTPTimeLimit
		*out = new(float64)
		**out = **in
	}
	if in.HTTPVersion != nil {
		in, out := &in.HTTPVersion, &out.HTTPVersion
		*out = new(float64)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(float64)
		**out = **in
	}
	if in.MtuMeasurements != nil {
		in, out := &in.MtuMeasurements, &out.MtuMeasurements
		*out = new(bool)
		**out = **in
	}
	if in.NetworkMeasurements != nil {
		in, out := &in.NetworkMeasurements, &out.NetworkMeasurements
		*out = new(bool)
		**out = **in
	}
	if in.NumPathTraces != nil {
		in, out := &in.NumPathTraces, &out.NumPathTraces
		*out = new(float64)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.PathTraceMode != nil {
		in, out := &in.PathTraceMode, &out.PathTraceMode
		*out = new(string)
		**out = **in
	}
	if in.PostBody != nil {
		in, out := &in.PostBody, &out.PostBody
		*out = new(string)
		**out = **in
	}
	if in.ProbeMode != nil {
		in, out := &in.ProbeMode, &out.ProbeMode
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.SSLVersionID != nil {
		in, out := &in.SSLVersionID, &out.SSLVersionID
		*out = new(float64)
		**out = **in
	}
	if in.SharedWithAccounts != nil {
		in, out := &in.SharedWithAccounts, &out.SharedWithAccounts
		*out = make([]SharedWithAccountsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TestName != nil {
		in, out := &in.TestName, &out.TestName
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.UseNtlm != nil {
		in, out := &in.UseNtlm, &out.UseNtlm
		*out = new(bool)
		**out = **in
	}
	if in.UserAgent != nil {
		in, out := &in.UserAgent, &out.UserAgent
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VerifyCertificate != nil {
		in, out := &in.VerifyCertificate, &out.VerifyCertificate
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerParameters.
func (in *ServerParameters) DeepCopy() *ServerParameters {
	if in == nil {
		return nil
	}
	out := new(ServerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerSpec) DeepCopyInto(out *ServerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerSpec.
func (in *ServerSpec) DeepCopy() *ServerSpec {
	if in == nil {
		return nil
	}
	out := new(ServerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerStatus) DeepCopyInto(out *ServerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerStatus.
func (in *ServerStatus) DeepCopy() *ServerStatus {
	if in == nil {
		return nil
	}
	out := new(ServerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharedWithAccountsInitParameters) DeepCopyInto(out *SharedWithAccountsInitParameters) {
	*out = *in
	if in.Aid != nil {
		in, out := &in.Aid, &out.Aid
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharedWithAccountsInitParameters.
func (in *SharedWithAccountsInitParameters) DeepCopy() *SharedWithAccountsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SharedWithAccountsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharedWithAccountsObservation) DeepCopyInto(out *SharedWithAccountsObservation) {
	*out = *in
	if in.Aid != nil {
		in, out := &in.Aid, &out.Aid
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharedWithAccountsObservation.
func (in *SharedWithAccountsObservation) DeepCopy() *SharedWithAccountsObservation {
	if in == nil {
		return nil
	}
	out := new(SharedWithAccountsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharedWithAccountsParameters) DeepCopyInto(out *SharedWithAccountsParameters) {
	*out = *in
	if in.Aid != nil {
		in, out := &in.Aid, &out.Aid
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharedWithAccountsParameters.
func (in *SharedWithAccountsParameters) DeepCopy() *SharedWithAccountsParameters {
	if in == nil {
		return nil
	}
	out := new(SharedWithAccountsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestsInitParameters) DeepCopyInto(out *TestsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestsInitParameters.
func (in *TestsInitParameters) DeepCopy() *TestsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TestsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestsObservation) DeepCopyInto(out *TestsObservation) {
	*out = *in
	if in.TestID != nil {
		in, out := &in.TestID, &out.TestID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestsObservation.
func (in *TestsObservation) DeepCopy() *TestsObservation {
	if in == nil {
		return nil
	}
	out := new(TestsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestsParameters) DeepCopyInto(out *TestsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestsParameters.
func (in *TestsParameters) DeepCopy() *TestsParameters {
	if in == nil {
		return nil
	}
	out := new(TestsParameters)
	in.DeepCopyInto(out)
	return out
}
