// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0


// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"

)




type APILinksInitParameters struct {

}


type APILinksObservation struct {


// (String)
Href *string `json:"href,omitempty" tf:"href,omitempty"`

// (String)
Rel *string `json:"rel,omitempty" tf:"rel,omitempty"`
}


type APILinksParameters struct {

}


type AgentsInitParameters struct {


// (Number) The unique ID for the ThousandEyes agent.
// The unique ID for the ThousandEyes agent.
AgentID *float64 `json:"agentId,omitempty" tf:"agent_id,omitempty"`
}


type AgentsObservation struct {


// (Number) The unique ID for the ThousandEyes agent.
// The unique ID for the ThousandEyes agent.
AgentID *float64 `json:"agentId,omitempty" tf:"agent_id,omitempty"`
}


type AgentsParameters struct {


// (Number) The unique ID for the ThousandEyes agent.
// The unique ID for the ThousandEyes agent.
// +kubebuilder:validation:Optional
AgentID *float64 `json:"agentId" tf:"agent_id,omitempty"`
}


type AlertRulesInitParameters struct {


// (Number) The unique ID of the alert rule.
// The unique ID of the alert rule.
RuleID *float64 `json:"ruleId,omitempty" tf:"rule_id,omitempty"`
}


type AlertRulesObservation struct {


// (Number) The unique ID of the alert rule.
// The unique ID of the alert rule.
RuleID *float64 `json:"ruleId,omitempty" tf:"rule_id,omitempty"`
}


type AlertRulesParameters struct {


// (Number) The unique ID of the alert rule.
// The unique ID of the alert rule.
// +kubebuilder:validation:Optional
RuleID *float64 `json:"ruleId,omitempty" tf:"rule_id,omitempty"`
}


type BGPMonitorsInitParameters struct {


// (String) The IP address of the BGP monitor.
// The IP address of the BGP monitor.
IPAddress *string `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

// (Number) The unique ID of the BGP monitor.
// The unique ID of the BGP monitor.
MonitorID *float64 `json:"monitorId,omitempty" tf:"monitor_id,omitempty"`

// (String) The name of the BGP monitor.
// The name of the BGP monitor.
MonitorName *string `json:"monitorName,omitempty" tf:"monitor_name,omitempty"`

// (String) [Public or Private] Shows the type of BGP monitor.
// [Public or Private] Shows the type of BGP monitor.
MonitorType *string `json:"monitorType,omitempty" tf:"monitor_type,omitempty"`

// (String) The name of the autonomous system in which the BGP monitor is found.
// The name of the autonomous system in which the BGP monitor is found.
Network *string `json:"network,omitempty" tf:"network,omitempty"`
}


type BGPMonitorsObservation struct {


// (String) The IP address of the BGP monitor.
// The IP address of the BGP monitor.
IPAddress *string `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

// (Number) The unique ID of the BGP monitor.
// The unique ID of the BGP monitor.
MonitorID *float64 `json:"monitorId,omitempty" tf:"monitor_id,omitempty"`

// (String) The name of the BGP monitor.
// The name of the BGP monitor.
MonitorName *string `json:"monitorName,omitempty" tf:"monitor_name,omitempty"`

// (String) [Public or Private] Shows the type of BGP monitor.
// [Public or Private] Shows the type of BGP monitor.
MonitorType *string `json:"monitorType,omitempty" tf:"monitor_type,omitempty"`

// (String) The name of the autonomous system in which the BGP monitor is found.
// The name of the autonomous system in which the BGP monitor is found.
Network *string `json:"network,omitempty" tf:"network,omitempty"`
}


type BGPMonitorsParameters struct {


// (String) The IP address of the BGP monitor.
// The IP address of the BGP monitor.
// +kubebuilder:validation:Optional
IPAddress *string `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

// (Number) The unique ID of the BGP monitor.
// The unique ID of the BGP monitor.
// +kubebuilder:validation:Optional
MonitorID *float64 `json:"monitorId" tf:"monitor_id,omitempty"`

// (String) The name of the BGP monitor.
// The name of the BGP monitor.
// +kubebuilder:validation:Optional
MonitorName *string `json:"monitorName,omitempty" tf:"monitor_name,omitempty"`

// (String) [Public or Private] Shows the type of BGP monitor.
// [Public or Private] Shows the type of BGP monitor.
// +kubebuilder:validation:Optional
MonitorType *string `json:"monitorType,omitempty" tf:"monitor_type,omitempty"`

// (String) The name of the autonomous system in which the BGP monitor is found.
// The name of the autonomous system in which the BGP monitor is found.
// +kubebuilder:validation:Optional
Network *string `json:"network,omitempty" tf:"network,omitempty"`
}


type GroupsAgentsInitParameters struct {

}


type GroupsAgentsObservation struct {


// (Number) The unique ID for the ThousandEyes agent.
AgentID *float64 `json:"agentId,omitempty" tf:"agent_id,omitempty"`
}


type GroupsAgentsParameters struct {

}


type GroupsInitParameters struct {

}


type GroupsObservation struct {


// (Block Set, Min: 1) The list of ThousandEyes agents to use. (see below for nested schema)
Agents []GroupsAgentsObservation `json:"agents,omitempty" tf:"agents,omitempty"`

// (Boolean)
Builtin *bool `json:"builtin,omitempty" tf:"builtin,omitempty"`

// (Number)
GroupID *float64 `json:"groupId,omitempty" tf:"group_id,omitempty"`

// (String) Account name.
Name *string `json:"name,omitempty" tf:"name,omitempty"`

// (List of Object) (see below for nested schema)
Tests []TestsObservation `json:"tests,omitempty" tf:"tests,omitempty"`

// (String) The type of test.
Type *string `json:"type,omitempty" tf:"type,omitempty"`
}


type GroupsParameters struct {

}


type ServerInitParameters struct {


// (Block Set, Min: 1) The list of ThousandEyes agents to use. (see below for nested schema)
// The list of ThousandEyes agents to use.
Agents []AgentsInitParameters `json:"agents,omitempty" tf:"agents,omitempty"`

// rules endpoint. If alertsEnabled is set to 'true' and alertRules is not included in a creation/update query, the applicable defaults will be used. (see below for nested schema)
// Gets the ruleId from the /alert-rules endpoint. If alertsEnabled is set to 'true' and alertRules is not included in a creation/update query, the applicable defaults will be used.
AlertRules []AlertRulesInitParameters `json:"alertRules,omitempty" tf:"alert_rules,omitempty"`

// (Boolean) Set to 'true' to enable alerts, or 'false' to disable alerts. The default value is 'true'.
// Set to 'true' to enable alerts, or 'false' to disable alerts. The default value is 'true'.
AlertsEnabled *bool `json:"alertsEnabled,omitempty" tf:"alerts_enabled,omitempty"`

// (String) [NONE, BASIC, NTLM, KERBEROS] The HTTP authentication type. Defaults to NONE.
// [NONE, BASIC, NTLM, KERBEROS] The HTTP authentication type. Defaults to NONE.
AuthType *string `json:"authType,omitempty" tf:"auth_type,omitempty"`

// (Boolean) Enable BGP measurements. Set to true for enabled, false for disabled.
// Enable BGP measurements. Set to true for enabled, false for disabled.
BGPMeasurements *bool `json:"bgpMeasurements,omitempty" tf:"bgp_measurements,omitempty"`

// monitors endpoint. (see below for nested schema)
// The array of BGP monitor object IDs. The monitorIDs can be sourced from the /bgp-monitors endpoint.
BGPMonitors []BGPMonitorsInitParameters `json:"bgpMonitors,omitempty" tf:"bgp_monitors,omitempty"`

// (Boolean) Set to 1 to measure bandwidth. This only applies to Enterprise Agents assigned to the test, and requires that networkMeasurements is set. Defaults to 'false'.
// Set to 1 to measure bandwidth. This only applies to Enterprise Agents assigned to the test, and requires that networkMeasurements is set. Defaults to 'false'.
BandwidthMeasurements *bool `json:"bandwidthMeasurements,omitempty" tf:"bandwidth_measurements,omitempty"`

// (String) String representation (containing newline characters) of the client certificate, if used.
// String representation (containing newline characters) of the client certificate, if used.
ClientCertificate *string `json:"clientCertificate,omitempty" tf:"client_certificate,omitempty"`

// (String) Verify content using a regular expression. This field does not require escaping.
// Verify content using a regular expression. This field does not require escaping.
ContentRegex *string `json:"contentRegex,omitempty" tf:"content_regex,omitempty"`

// (Map of String) The custom headers.
// The custom headers.
// +mapType=granular
CustomHeaders map[string]*string `json:"customHeaders,omitempty" tf:"custom_headers,omitempty"`

// (String) The IP address to use for DNS override.
// The IP address to use for DNS override.
DNSOverride *string `json:"dnsOverride,omitempty" tf:"dns_override,omitempty"`

// (String) A description of the alert rule. Defaults to an empty string.
// A description of the alert rule. Defaults to an empty string.
Description *string `json:"description,omitempty" tf:"description,omitempty"`

// (String) The valid HTTP response code you’re interested in retrieving.
// The valid HTTP response code you’re interested in retrieving.
DesiredStatusCode *string `json:"desiredStatusCode,omitempty" tf:"desired_status_code,omitempty"`

// (Number) Specify the maximum number of bytes to download from the target object.
// Specify the maximum number of bytes to download from the target object.
DownloadLimit *float64 `json:"downloadLimit,omitempty" tf:"download_limit,omitempty"`

// (Boolean) Enables or disables the test.
// Enables or disables the test.
Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

// (Boolean) Follow HTTP/301 or HTTP/302 redirect directives. Defaults to 'true'.
// Follow HTTP/301 or HTTP/302 redirect directives. Defaults to 'true'.
FollowRedirects *bool `json:"followRedirects,omitempty" tf:"follow_redirects,omitempty"`

// (Number) The target time for HTTP server completion, specified in milliseconds.
// The target time for HTTP server completion, specified in milliseconds.
HTTPTargetTime *float64 `json:"httpTargetTime,omitempty" tf:"http_target_time,omitempty"`

// (Number) The target time for HTTP server limits, specified in seconds.
// The target time for HTTP server limits, specified in seconds.
HTTPTimeLimit *float64 `json:"httpTimeLimit,omitempty" tf:"http_time_limit,omitempty"`

// (Number) Set to 2 for the default HTTP version (prefer HTTP/2), or 1 for HTTP/1.1 only.
// Set to 2 for the default HTTP version (prefer HTTP/2), or 1 for HTTP/1.1 only.
HTTPVersion *float64 `json:"httpVersion,omitempty" tf:"http_version,omitempty"`

// (List of String) ["header: value", "header2: value"] The array of header strings.
// ["header: value", "header2: value"] The array of header strings.
Headers []*string `json:"headers,omitempty" tf:"headers,omitempty"`

// (Number) The interval to run the test on, in seconds.
// The interval to run the test on, in seconds.
Interval *float64 `json:"interval,omitempty" tf:"interval,omitempty"`

// (Boolean) Measure MTU sizes on the network from agents to the target.
// Measure MTU sizes on the network from agents to the target.
MtuMeasurements *bool `json:"mtuMeasurements,omitempty" tf:"mtu_measurements,omitempty"`

// (Boolean) Set to 'true' to enable network measurements.
// Set to 'true' to enable network measurements.
NetworkMeasurements *bool `json:"networkMeasurements,omitempty" tf:"network_measurements,omitempty"`

// (Number) The number of path traces.
// The number of path traces.
NumPathTraces *float64 `json:"numPathTraces,omitempty" tf:"num_path_traces,omitempty"`

// (String) The password to be used to authenticate with the destination server.
// The password to be used to authenticate with the destination server.
Password *string `json:"password,omitempty" tf:"password,omitempty"`

// (String) [classic or inSession] Choose 'inSession' to perform the path trace within a TCP session. Default value is 'classic'.
// [classic or inSession] Choose 'inSession' to perform the path trace within a TCP session. Default value is 'classic'.
PathTraceMode *string `json:"pathTraceMode,omitempty" tf:"path_trace_mode,omitempty"`

// (String) The POST body content. No escaping is required. If the post body is set to something other than empty, the requestMethod will be set to POST.
// The POST body content. No escaping is required. If the post body is set to something other than empty, the requestMethod will be set to POST.
PostBody *string `json:"postBody,omitempty" tf:"post_body,omitempty"`

// to-end network tests. This is only valid if the protocol is set to TCP. The default value is AUTO.
// [AUTO, SACk, or SYN] The probe mode used by end-to-end network tests. This is only valid if the protocol is set to TCP. The default value is AUTO.
ProbeMode *string `json:"probeMode,omitempty" tf:"probe_mode,omitempty"`

// to-end, path trace, PMTUD). Default value is TCP.
// The protocol used by dependent network tests (end-to-end, path trace, PMTUD). Default value is TCP.
Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

// (Number) Defines the SSL version. 0 for auto, 3 for SSLv3, 4 for TLS v1.0, 5 for TLS v1.1, 6 for TLS v1.2.
// Defines the SSL version. 0 for auto, 3 for SSLv3, 4 for TLS v1.0, 5 for TLS v1.1, 6 for TLS v1.2.
SSLVersionID *float64 `json:"sslVersionId,omitempty" tf:"ssl_version_id,omitempty"`

// (Block List) [“serverName”: “fqdn of server”] The array of DNS Server objects. (see below for nested schema)
// [“serverName”: “fqdn of server”] The array of DNS Server objects.
SharedWithAccounts []SharedWithAccountsInitParameters `json:"sharedWithAccounts,omitempty" tf:"shared_with_accounts,omitempty"`

// (String) The name of the test.
// The name of the test.
TestName *string `json:"testName,omitempty" tf:"test_name,omitempty"`

// (String) The target URL for the test.
// The target URL for the test.
URL *string `json:"url,omitempty" tf:"url,omitempty"`

// (Boolean) Enable to use basic authentication. Only include this field if you are using authentication. Requires the username and password to be set if enabled.
// Enable to use basic authentication. Only include this field if you are using authentication. Requires the username and password to be set if enabled.
UseNtlm *bool `json:"useNtlm,omitempty" tf:"use_ntlm,omitempty"`

// agent string to be provided during the test.
// The user-agent string to be provided during the test.
UserAgent *string `json:"userAgent,omitempty" tf:"user_agent,omitempty"`

// (String) The username to be used to authenticate with the destination server.
// The username to be used to authenticate with the destination server.
Username *string `json:"username,omitempty" tf:"username,omitempty"`

// (Boolean) Set whether to ignore certificate errors. Set to 'false' to ignore certificate errors. The default value is 'true'.
// Set whether to ignore certificate errors. Set to 'false' to ignore certificate errors. The default value is 'true'.
VerifyCertificate *bool `json:"verifyCertificate,omitempty" tf:"verify_certificate,omitempty"`
}


type ServerObservation struct {


// only, and shows rel and href elements. (see below for nested schema)
// Self links to the endpoint to pull test metadata, and data links to the endpoint for test data. Read-only, and shows rel and href elements.
APILinks []APILinksObservation `json:"apiLinks,omitempty" tf:"api_links,omitempty"`

// (Block Set, Min: 1) The list of ThousandEyes agents to use. (see below for nested schema)
// The list of ThousandEyes agents to use.
Agents []AgentsObservation `json:"agents,omitempty" tf:"agents,omitempty"`

// rules endpoint. If alertsEnabled is set to 'true' and alertRules is not included in a creation/update query, the applicable defaults will be used. (see below for nested schema)
// Gets the ruleId from the /alert-rules endpoint. If alertsEnabled is set to 'true' and alertRules is not included in a creation/update query, the applicable defaults will be used.
AlertRules []AlertRulesObservation `json:"alertRules,omitempty" tf:"alert_rules,omitempty"`

// (Boolean) Set to 'true' to enable alerts, or 'false' to disable alerts. The default value is 'true'.
// Set to 'true' to enable alerts, or 'false' to disable alerts. The default value is 'true'.
AlertsEnabled *bool `json:"alertsEnabled,omitempty" tf:"alerts_enabled,omitempty"`

// (String) [NONE, BASIC, NTLM, KERBEROS] The HTTP authentication type. Defaults to NONE.
// [NONE, BASIC, NTLM, KERBEROS] The HTTP authentication type. Defaults to NONE.
AuthType *string `json:"authType,omitempty" tf:"auth_type,omitempty"`

// (Boolean) Enable BGP measurements. Set to true for enabled, false for disabled.
// Enable BGP measurements. Set to true for enabled, false for disabled.
BGPMeasurements *bool `json:"bgpMeasurements,omitempty" tf:"bgp_measurements,omitempty"`

// monitors endpoint. (see below for nested schema)
// The array of BGP monitor object IDs. The monitorIDs can be sourced from the /bgp-monitors endpoint.
BGPMonitors []BGPMonitorsObservation `json:"bgpMonitors,omitempty" tf:"bgp_monitors,omitempty"`

// (Boolean) Set to 1 to measure bandwidth. This only applies to Enterprise Agents assigned to the test, and requires that networkMeasurements is set. Defaults to 'false'.
// Set to 1 to measure bandwidth. This only applies to Enterprise Agents assigned to the test, and requires that networkMeasurements is set. Defaults to 'false'.
BandwidthMeasurements *bool `json:"bandwidthMeasurements,omitempty" tf:"bandwidth_measurements,omitempty"`

// (String) String representation (containing newline characters) of the client certificate, if used.
// String representation (containing newline characters) of the client certificate, if used.
ClientCertificate *string `json:"clientCertificate,omitempty" tf:"client_certificate,omitempty"`

// (String) Verify content using a regular expression. This field does not require escaping.
// Verify content using a regular expression. This field does not require escaping.
ContentRegex *string `json:"contentRegex,omitempty" tf:"content_regex,omitempty"`

// (String) Created by user.
// Created by user.
CreatedBy *string `json:"createdBy,omitempty" tf:"created_by,omitempty"`

// (String) The date of creation.
// The date of creation.
CreatedDate *string `json:"createdDate,omitempty" tf:"created_date,omitempty"`

// (Map of String) The custom headers.
// The custom headers.
// +mapType=granular
CustomHeaders map[string]*string `json:"customHeaders,omitempty" tf:"custom_headers,omitempty"`

// (String) The IP address to use for DNS override.
// The IP address to use for DNS override.
DNSOverride *string `json:"dnsOverride,omitempty" tf:"dns_override,omitempty"`

// (String) A description of the alert rule. Defaults to an empty string.
// A description of the alert rule. Defaults to an empty string.
Description *string `json:"description,omitempty" tf:"description,omitempty"`

// (String) The valid HTTP response code you’re interested in retrieving.
// The valid HTTP response code you’re interested in retrieving.
DesiredStatusCode *string `json:"desiredStatusCode,omitempty" tf:"desired_status_code,omitempty"`

// (Number) Specify the maximum number of bytes to download from the target object.
// Specify the maximum number of bytes to download from the target object.
DownloadLimit *float64 `json:"downloadLimit,omitempty" tf:"download_limit,omitempty"`

// (Boolean) Enables or disables the test.
// Enables or disables the test.
Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

// (Boolean) Follow HTTP/301 or HTTP/302 redirect directives. Defaults to 'true'.
// Follow HTTP/301 or HTTP/302 redirect directives. Defaults to 'true'.
FollowRedirects *bool `json:"followRedirects,omitempty" tf:"follow_redirects,omitempty"`

// (Set of Object) The array of label objects. (see below for nested schema)
// The array of label objects.
Groups []GroupsObservation `json:"groups,omitempty" tf:"groups,omitempty"`

// (Number) The target time for HTTP server completion, specified in milliseconds.
// The target time for HTTP server completion, specified in milliseconds.
HTTPTargetTime *float64 `json:"httpTargetTime,omitempty" tf:"http_target_time,omitempty"`

// (Number) The target time for HTTP server limits, specified in seconds.
// The target time for HTTP server limits, specified in seconds.
HTTPTimeLimit *float64 `json:"httpTimeLimit,omitempty" tf:"http_time_limit,omitempty"`

// (Number) Set to 2 for the default HTTP version (prefer HTTP/2), or 1 for HTTP/1.1 only.
// Set to 2 for the default HTTP version (prefer HTTP/2), or 1 for HTTP/1.1 only.
HTTPVersion *float64 `json:"httpVersion,omitempty" tf:"http_version,omitempty"`

// (List of String) ["header: value", "header2: value"] The array of header strings.
// ["header: value", "header2: value"] The array of header strings.
Headers []*string `json:"headers,omitempty" tf:"headers,omitempty"`

// (String) The ID of this resource.
ID *string `json:"id,omitempty" tf:"id,omitempty"`

// (Number) The interval to run the test on, in seconds.
// The interval to run the test on, in seconds.
Interval *float64 `json:"interval,omitempty" tf:"interval,omitempty"`

// (Boolean) Set to 'true' for a test shared with your account group, or to 'false' for a normal test.
// Set to 'true' for a test shared with your account group, or to 'false' for a normal test.
LiveShare *bool `json:"liveShare,omitempty" tf:"live_share,omitempty"`

// (String) Last modified by this user.
// Last modified by this user.
ModifiedBy *string `json:"modifiedBy,omitempty" tf:"modified_by,omitempty"`

// (String) The date the test was last modified. Shown in UTC.
// The date the test was last modified. Shown in UTC.
ModifiedDate *string `json:"modifiedDate,omitempty" tf:"modified_date,omitempty"`

// (Boolean) Measure MTU sizes on the network from agents to the target.
// Measure MTU sizes on the network from agents to the target.
MtuMeasurements *bool `json:"mtuMeasurements,omitempty" tf:"mtu_measurements,omitempty"`

// (Boolean) Set to 'true' to enable network measurements.
// Set to 'true' to enable network measurements.
NetworkMeasurements *bool `json:"networkMeasurements,omitempty" tf:"network_measurements,omitempty"`

// (Number) The number of path traces.
// The number of path traces.
NumPathTraces *float64 `json:"numPathTraces,omitempty" tf:"num_path_traces,omitempty"`

// (String) The password to be used to authenticate with the destination server.
// The password to be used to authenticate with the destination server.
Password *string `json:"password,omitempty" tf:"password,omitempty"`

// (String) [classic or inSession] Choose 'inSession' to perform the path trace within a TCP session. Default value is 'classic'.
// [classic or inSession] Choose 'inSession' to perform the path trace within a TCP session. Default value is 'classic'.
PathTraceMode *string `json:"pathTraceMode,omitempty" tf:"path_trace_mode,omitempty"`

// (String) The POST body content. No escaping is required. If the post body is set to something other than empty, the requestMethod will be set to POST.
// The POST body content. No escaping is required. If the post body is set to something other than empty, the requestMethod will be set to POST.
PostBody *string `json:"postBody,omitempty" tf:"post_body,omitempty"`

// to-end network tests. This is only valid if the protocol is set to TCP. The default value is AUTO.
// [AUTO, SACk, or SYN] The probe mode used by end-to-end network tests. This is only valid if the protocol is set to TCP. The default value is AUTO.
ProbeMode *string `json:"probeMode,omitempty" tf:"probe_mode,omitempty"`

// to-end, path trace, PMTUD). Default value is TCP.
// The protocol used by dependent network tests (end-to-end, path trace, PMTUD). Default value is TCP.
Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

// (String) Reflects the verbose ssl protocol version used by a test.
// Reflects the verbose ssl protocol version used by a test.
SSLVersion *string `json:"sslVersion,omitempty" tf:"ssl_version,omitempty"`

// (Number) Defines the SSL version. 0 for auto, 3 for SSLv3, 4 for TLS v1.0, 5 for TLS v1.1, 6 for TLS v1.2.
// Defines the SSL version. 0 for auto, 3 for SSLv3, 4 for TLS v1.0, 5 for TLS v1.1, 6 for TLS v1.2.
SSLVersionID *float64 `json:"sslVersionId,omitempty" tf:"ssl_version_id,omitempty"`

// (Boolean) Set to 'true' for a saved event, or to 'false' for a normal test.
// Set to 'true' for a saved event, or to 'false' for a normal test.
SavedEvent *bool `json:"savedEvent,omitempty" tf:"saved_event,omitempty"`

// (Block List) [“serverName”: “fqdn of server”] The array of DNS Server objects. (see below for nested schema)
// [“serverName”: “fqdn of server”] The array of DNS Server objects.
SharedWithAccounts []SharedWithAccountsObservation `json:"sharedWithAccounts,omitempty" tf:"shared_with_accounts,omitempty"`

// (Number) The unique ID of the test.
// The unique ID of the test.
TestID *float64 `json:"testId,omitempty" tf:"test_id,omitempty"`

// (String) The name of the test.
// The name of the test.
TestName *string `json:"testName,omitempty" tf:"test_name,omitempty"`

// (String) The type of test.
// The type of test.
Type *string `json:"type,omitempty" tf:"type,omitempty"`

// (String) The target URL for the test.
// The target URL for the test.
URL *string `json:"url,omitempty" tf:"url,omitempty"`

// (Boolean) Enable to use basic authentication. Only include this field if you are using authentication. Requires the username and password to be set if enabled.
// Enable to use basic authentication. Only include this field if you are using authentication. Requires the username and password to be set if enabled.
UseNtlm *bool `json:"useNtlm,omitempty" tf:"use_ntlm,omitempty"`

// agent string to be provided during the test.
// The user-agent string to be provided during the test.
UserAgent *string `json:"userAgent,omitempty" tf:"user_agent,omitempty"`

// (String) The username to be used to authenticate with the destination server.
// The username to be used to authenticate with the destination server.
Username *string `json:"username,omitempty" tf:"username,omitempty"`

// (Boolean) Set whether to ignore certificate errors. Set to 'false' to ignore certificate errors. The default value is 'true'.
// Set whether to ignore certificate errors. Set to 'false' to ignore certificate errors. The default value is 'true'.
VerifyCertificate *bool `json:"verifyCertificate,omitempty" tf:"verify_certificate,omitempty"`
}


type ServerParameters struct {


// (Block Set, Min: 1) The list of ThousandEyes agents to use. (see below for nested schema)
// The list of ThousandEyes agents to use.
// +kubebuilder:validation:Optional
Agents []AgentsParameters `json:"agents,omitempty" tf:"agents,omitempty"`

// rules endpoint. If alertsEnabled is set to 'true' and alertRules is not included in a creation/update query, the applicable defaults will be used. (see below for nested schema)
// Gets the ruleId from the /alert-rules endpoint. If alertsEnabled is set to 'true' and alertRules is not included in a creation/update query, the applicable defaults will be used.
// +kubebuilder:validation:Optional
AlertRules []AlertRulesParameters `json:"alertRules,omitempty" tf:"alert_rules,omitempty"`

// (Boolean) Set to 'true' to enable alerts, or 'false' to disable alerts. The default value is 'true'.
// Set to 'true' to enable alerts, or 'false' to disable alerts. The default value is 'true'.
// +kubebuilder:validation:Optional
AlertsEnabled *bool `json:"alertsEnabled,omitempty" tf:"alerts_enabled,omitempty"`

// (String) [NONE, BASIC, NTLM, KERBEROS] The HTTP authentication type. Defaults to NONE.
// [NONE, BASIC, NTLM, KERBEROS] The HTTP authentication type. Defaults to NONE.
// +kubebuilder:validation:Optional
AuthType *string `json:"authType,omitempty" tf:"auth_type,omitempty"`

// (Boolean) Enable BGP measurements. Set to true for enabled, false for disabled.
// Enable BGP measurements. Set to true for enabled, false for disabled.
// +kubebuilder:validation:Optional
BGPMeasurements *bool `json:"bgpMeasurements,omitempty" tf:"bgp_measurements,omitempty"`

// monitors endpoint. (see below for nested schema)
// The array of BGP monitor object IDs. The monitorIDs can be sourced from the /bgp-monitors endpoint.
// +kubebuilder:validation:Optional
BGPMonitors []BGPMonitorsParameters `json:"bgpMonitors,omitempty" tf:"bgp_monitors,omitempty"`

// (Boolean) Set to 1 to measure bandwidth. This only applies to Enterprise Agents assigned to the test, and requires that networkMeasurements is set. Defaults to 'false'.
// Set to 1 to measure bandwidth. This only applies to Enterprise Agents assigned to the test, and requires that networkMeasurements is set. Defaults to 'false'.
// +kubebuilder:validation:Optional
BandwidthMeasurements *bool `json:"bandwidthMeasurements,omitempty" tf:"bandwidth_measurements,omitempty"`

// (String) String representation (containing newline characters) of the client certificate, if used.
// String representation (containing newline characters) of the client certificate, if used.
// +kubebuilder:validation:Optional
ClientCertificate *string `json:"clientCertificate,omitempty" tf:"client_certificate,omitempty"`

// (String) Verify content using a regular expression. This field does not require escaping.
// Verify content using a regular expression. This field does not require escaping.
// +kubebuilder:validation:Optional
ContentRegex *string `json:"contentRegex,omitempty" tf:"content_regex,omitempty"`

// (Map of String) The custom headers.
// The custom headers.
// +kubebuilder:validation:Optional
// +mapType=granular
CustomHeaders map[string]*string `json:"customHeaders,omitempty" tf:"custom_headers,omitempty"`

// (String) The IP address to use for DNS override.
// The IP address to use for DNS override.
// +kubebuilder:validation:Optional
DNSOverride *string `json:"dnsOverride,omitempty" tf:"dns_override,omitempty"`

// (String) A description of the alert rule. Defaults to an empty string.
// A description of the alert rule. Defaults to an empty string.
// +kubebuilder:validation:Optional
Description *string `json:"description,omitempty" tf:"description,omitempty"`

// (String) The valid HTTP response code you’re interested in retrieving.
// The valid HTTP response code you’re interested in retrieving.
// +kubebuilder:validation:Optional
DesiredStatusCode *string `json:"desiredStatusCode,omitempty" tf:"desired_status_code,omitempty"`

// (Number) Specify the maximum number of bytes to download from the target object.
// Specify the maximum number of bytes to download from the target object.
// +kubebuilder:validation:Optional
DownloadLimit *float64 `json:"downloadLimit,omitempty" tf:"download_limit,omitempty"`

// (Boolean) Enables or disables the test.
// Enables or disables the test.
// +kubebuilder:validation:Optional
Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

// (Boolean) Follow HTTP/301 or HTTP/302 redirect directives. Defaults to 'true'.
// Follow HTTP/301 or HTTP/302 redirect directives. Defaults to 'true'.
// +kubebuilder:validation:Optional
FollowRedirects *bool `json:"followRedirects,omitempty" tf:"follow_redirects,omitempty"`

// (Number) The target time for HTTP server completion, specified in milliseconds.
// The target time for HTTP server completion, specified in milliseconds.
// +kubebuilder:validation:Optional
HTTPTargetTime *float64 `json:"httpTargetTime,omitempty" tf:"http_target_time,omitempty"`

// (Number) The target time for HTTP server limits, specified in seconds.
// The target time for HTTP server limits, specified in seconds.
// +kubebuilder:validation:Optional
HTTPTimeLimit *float64 `json:"httpTimeLimit,omitempty" tf:"http_time_limit,omitempty"`

// (Number) Set to 2 for the default HTTP version (prefer HTTP/2), or 1 for HTTP/1.1 only.
// Set to 2 for the default HTTP version (prefer HTTP/2), or 1 for HTTP/1.1 only.
// +kubebuilder:validation:Optional
HTTPVersion *float64 `json:"httpVersion,omitempty" tf:"http_version,omitempty"`

// (List of String) ["header: value", "header2: value"] The array of header strings.
// ["header: value", "header2: value"] The array of header strings.
// +kubebuilder:validation:Optional
Headers []*string `json:"headers,omitempty" tf:"headers,omitempty"`

// (Number) The interval to run the test on, in seconds.
// The interval to run the test on, in seconds.
// +kubebuilder:validation:Optional
Interval *float64 `json:"interval,omitempty" tf:"interval,omitempty"`

// (Boolean) Measure MTU sizes on the network from agents to the target.
// Measure MTU sizes on the network from agents to the target.
// +kubebuilder:validation:Optional
MtuMeasurements *bool `json:"mtuMeasurements,omitempty" tf:"mtu_measurements,omitempty"`

// (Boolean) Set to 'true' to enable network measurements.
// Set to 'true' to enable network measurements.
// +kubebuilder:validation:Optional
NetworkMeasurements *bool `json:"networkMeasurements,omitempty" tf:"network_measurements,omitempty"`

// (Number) The number of path traces.
// The number of path traces.
// +kubebuilder:validation:Optional
NumPathTraces *float64 `json:"numPathTraces,omitempty" tf:"num_path_traces,omitempty"`

// (String) The password to be used to authenticate with the destination server.
// The password to be used to authenticate with the destination server.
// +kubebuilder:validation:Optional
Password *string `json:"password,omitempty" tf:"password,omitempty"`

// (String) [classic or inSession] Choose 'inSession' to perform the path trace within a TCP session. Default value is 'classic'.
// [classic or inSession] Choose 'inSession' to perform the path trace within a TCP session. Default value is 'classic'.
// +kubebuilder:validation:Optional
PathTraceMode *string `json:"pathTraceMode,omitempty" tf:"path_trace_mode,omitempty"`

// (String) The POST body content. No escaping is required. If the post body is set to something other than empty, the requestMethod will be set to POST.
// The POST body content. No escaping is required. If the post body is set to something other than empty, the requestMethod will be set to POST.
// +kubebuilder:validation:Optional
PostBody *string `json:"postBody,omitempty" tf:"post_body,omitempty"`

// to-end network tests. This is only valid if the protocol is set to TCP. The default value is AUTO.
// [AUTO, SACk, or SYN] The probe mode used by end-to-end network tests. This is only valid if the protocol is set to TCP. The default value is AUTO.
// +kubebuilder:validation:Optional
ProbeMode *string `json:"probeMode,omitempty" tf:"probe_mode,omitempty"`

// to-end, path trace, PMTUD). Default value is TCP.
// The protocol used by dependent network tests (end-to-end, path trace, PMTUD). Default value is TCP.
// +kubebuilder:validation:Optional
Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

// (Number) Defines the SSL version. 0 for auto, 3 for SSLv3, 4 for TLS v1.0, 5 for TLS v1.1, 6 for TLS v1.2.
// Defines the SSL version. 0 for auto, 3 for SSLv3, 4 for TLS v1.0, 5 for TLS v1.1, 6 for TLS v1.2.
// +kubebuilder:validation:Optional
SSLVersionID *float64 `json:"sslVersionId,omitempty" tf:"ssl_version_id,omitempty"`

// (Block List) [“serverName”: “fqdn of server”] The array of DNS Server objects. (see below for nested schema)
// [“serverName”: “fqdn of server”] The array of DNS Server objects.
// +kubebuilder:validation:Optional
SharedWithAccounts []SharedWithAccountsParameters `json:"sharedWithAccounts,omitempty" tf:"shared_with_accounts,omitempty"`

// (String) The name of the test.
// The name of the test.
// +kubebuilder:validation:Optional
TestName *string `json:"testName,omitempty" tf:"test_name,omitempty"`

// (String) The target URL for the test.
// The target URL for the test.
// +kubebuilder:validation:Optional
URL *string `json:"url,omitempty" tf:"url,omitempty"`

// (Boolean) Enable to use basic authentication. Only include this field if you are using authentication. Requires the username and password to be set if enabled.
// Enable to use basic authentication. Only include this field if you are using authentication. Requires the username and password to be set if enabled.
// +kubebuilder:validation:Optional
UseNtlm *bool `json:"useNtlm,omitempty" tf:"use_ntlm,omitempty"`

// agent string to be provided during the test.
// The user-agent string to be provided during the test.
// +kubebuilder:validation:Optional
UserAgent *string `json:"userAgent,omitempty" tf:"user_agent,omitempty"`

// (String) The username to be used to authenticate with the destination server.
// The username to be used to authenticate with the destination server.
// +kubebuilder:validation:Optional
Username *string `json:"username,omitempty" tf:"username,omitempty"`

// (Boolean) Set whether to ignore certificate errors. Set to 'false' to ignore certificate errors. The default value is 'true'.
// Set whether to ignore certificate errors. Set to 'false' to ignore certificate errors. The default value is 'true'.
// +kubebuilder:validation:Optional
VerifyCertificate *bool `json:"verifyCertificate,omitempty" tf:"verify_certificate,omitempty"`
}


type SharedWithAccountsInitParameters struct {


// (Number) The account group ID.
// The account group ID.
Aid *float64 `json:"aid,omitempty" tf:"aid,omitempty"`
}


type SharedWithAccountsObservation struct {


// (Number) The account group ID.
// The account group ID.
Aid *float64 `json:"aid,omitempty" tf:"aid,omitempty"`

// (String) Account name.
// Account name.
Name *string `json:"name,omitempty" tf:"name,omitempty"`
}


type SharedWithAccountsParameters struct {


// (Number) The account group ID.
// The account group ID.
// +kubebuilder:validation:Optional
Aid *float64 `json:"aid" tf:"aid,omitempty"`
}


type TestsInitParameters struct {

}


type TestsObservation struct {


// (Number) The unique ID of the test.
TestID *float64 `json:"testId,omitempty" tf:"test_id,omitempty"`
}


type TestsParameters struct {

}

// ServerSpec defines the desired state of Server
type ServerSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider       ServerParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider       ServerInitParameters `json:"initProvider,omitempty"`
}

// ServerStatus defines the observed state of Server.
type ServerStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider          ServerObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion


// Server is the Schema for the Servers API. 
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,thousandeyes}
type Server struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.agents) || (has(self.initProvider) && has(self.initProvider.agents))",message="spec.forProvider.agents is a required parameter"
// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.interval) || (has(self.initProvider) && has(self.initProvider.interval))",message="spec.forProvider.interval is a required parameter"
// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.testName) || (has(self.initProvider) && has(self.initProvider.testName))",message="spec.forProvider.testName is a required parameter"
// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.url) || (has(self.initProvider) && has(self.initProvider.url))",message="spec.forProvider.url is a required parameter"
	Spec              ServerSpec   `json:"spec"`
	Status            ServerStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ServerList contains a list of Servers
type ServerList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Server `json:"items"`
}

// Repository type metadata.
var (
	Server_Kind             = "Server"
	Server_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Server_Kind}.String()
	Server_KindAPIVersion   = Server_Kind + "." + CRDGroupVersion.String()
	Server_GroupVersionKind = CRDGroupVersion.WithKind(Server_Kind)
)

func init() {
	SchemeBuilder.Register(&Server{}, &ServerList{})
}
